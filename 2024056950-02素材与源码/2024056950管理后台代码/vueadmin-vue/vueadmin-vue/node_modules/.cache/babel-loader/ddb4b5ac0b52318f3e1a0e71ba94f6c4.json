{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"Tabs\",\n  data() {\n    return {};\n  },\n  computed: {\n    editableTabs: {\n      get() {\n        return this.$store.state.menus.editableTabs;\n      },\n      set(val) {\n        this.$store.state.menus.editableTabs = val;\n      }\n    },\n    editableTabsValue: {\n      get() {\n        return this.$store.state.menus.editableTabsValue;\n      },\n      set(val) {\n        this.$store.state.menus.editableTabsValue = val;\n      }\n    }\n  },\n  methods: {\n    removeTab(targetName) {\n      if (targetName === \"Index\") {\n        return;\n      }\n      let tabs = this.editableTabs;\n      let activeName = this.editableTabsValue;\n      if (activeName === targetName) {\n        tabs.forEach((tab, index) => {\n          if (tab.name === targetName) {\n            let nextTab = tabs[index + 1] || tabs[index - 1];\n            if (nextTab) {\n              activeName = nextTab.name;\n            }\n          }\n        });\n      }\n      this.editableTabsValue = activeName;\n      this.editableTabs = tabs.filter(tab => tab.name !== targetName);\n      this.$router.push({\n        name: activeName\n      });\n    },\n    clickTab(target) {\n      this.$router.push({\n        name: target.name\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAcA;EACAA;EACAC;IACA,QACA;EACA;EACAC;IACAC;MACAC;QACA;MACA;MACAC;QACA;MACA;IACA;IACAC;MACAF;QACA;MACA;MACAC;QACA;MACA;IACA;EACA;EACAE;IACAC;MACA;QACA;MACA;MACA;MACA;MACA;QACAC;UACA;YACA;YACA;cACAC;YACA;UACA;QACA;MACA;MAEA;MACA;MACA;QAAAV;MAAA;IACA;IACAW;MACA;QAAAX;MAAA;IACA;EACA;AACA","names":["name","data","computed","editableTabs","get","set","editableTabsValue","methods","removeTab","tabs","activeName","clickTab"],"sourceRoot":"src/components","sources":["Tabs.vue"],"sourcesContent":["<template>\r\n  <el-tabs v-model=\"editableTabsValue\" type=\"card\" closable @tab-remove=\"removeTab\" @tab-click=\"clickTab\">\r\n    <el-tab-pane\r\n        v-for=\"(item, index) in editableTabs\"\r\n        :key=\"item.name\"\r\n        :label=\"item.title\"\r\n        :name=\"item.name\"\r\n    >\r\n\r\n    </el-tab-pane>\r\n  </el-tabs>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Tabs\",\r\n  data() {\r\n    return {\r\n    }\r\n  },\r\n  computed: {\r\n    editableTabs: {\r\n      get() {\r\n        return this.$store.state.menus.editableTabs\r\n      },\r\n      set(val) {\r\n        this.$store.state.menus.editableTabs = val\r\n      }\r\n    },\r\n    editableTabsValue: {\r\n      get() {\r\n        return this.$store.state.menus.editableTabsValue\r\n      },\r\n      set(val) {\r\n        this.$store.state.menus.editableTabsValue = val\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    removeTab(targetName) {\r\n      if(targetName === \"Index\") {\r\n        return\r\n      }\r\n      let tabs = this.editableTabs;\r\n      let activeName = this.editableTabsValue;\r\n      if (activeName === targetName) {\r\n        tabs.forEach((tab, index) => {\r\n          if (tab.name === targetName) {\r\n            let nextTab = tabs[index + 1] || tabs[index - 1];\r\n            if (nextTab) {\r\n              activeName = nextTab.name;\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      this.editableTabsValue = activeName;\r\n      this.editableTabs = tabs.filter(tab => tab.name !== targetName);\r\n      this.$router.push({name: activeName})\r\n    },\r\n    clickTab(target) {\r\n      this.$router.push({name: target.name})\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}