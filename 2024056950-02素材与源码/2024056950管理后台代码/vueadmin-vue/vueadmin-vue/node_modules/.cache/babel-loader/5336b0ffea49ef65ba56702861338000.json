{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport moment from 'moment';\nmoment.locale('zh-cn');\nconst timePeriodOptions = [\"7:30-9:30\", \"9:30-11:30\", \"11:30-12:30\", \"13:30-15:30\", \"15:30-17:30\", \"17:30-18:30\", \"19:30-21:30\"];\nexport default {\n  name: \"Reservation\",\n  data() {\n    return {\n      tableData: [],\n      search: '',\n      dialogFormVisible: false,\n      form: {\n        openid: '',\n        nickName: '',\n        realName: '',\n        days: [{\n          day: moment(new Date()).format('YYYY/M/D(dddd)'),\n          checkedTimePeriod: []\n        }, {\n          day: moment(new Date()).add(1, \"days\").format('YYYY/M/D(dddd)'),\n          checkedTimePeriod: []\n        }, {\n          day: moment(new Date()).add(2, \"days\").format('YYYY/M/D(dddd)'),\n          checkedTimePeriod: []\n        }]\n      },\n      timePeriod: timePeriodOptions,\n      formLabelWidth: '120px',\n      checkAll: false,\n      isIndeterminate: true\n    };\n  },\n  methods: {\n    handleEdit(index, row) {\n      console.log(\"查看时openid\", row);\n      for (let i = 0; i < this.form.days.length; i++) {\n        this.form.days[i].checkedTimePeriod = [];\n      }\n      this.dialogFormVisible = true;\n      this.form.openid = row.openid;\n      this.form.nickName = row.nickName;\n      this.form.realName = row.realName;\n      for (let i = 0; i < row.times.length; i++) {\n        let day = row.times[i].name.split(' ')[0];\n        let timeIndex = this.form.days.findIndex(d => {\n          return d.day === day;\n        });\n        if (timeIndex != -1) {\n          this.form.days[timeIndex].checkedTimePeriod.push(row.times[i].name.split(' ')[1]);\n        }\n      }\n    },\n    handleClose(time, index) {\n      let timeIndex = this.tableData[index].times.findIndex(e => {\n        return e.name === time.name;\n      });\n      if (index != -1) {\n        this.tableData[index].times.splice(timeIndex, 1);\n      }\n    },\n    handleCheckAllChange(index) {\n      this.checkAll = !this.checkAll;\n      this.form.days[index].checkedTimePeriod = this.checkAll ? timePeriodOptions : [];\n      this.isIndeterminate = false;\n    },\n    handleCheckedTimePeriodChange(value) {\n      let checkedCount = value.length;\n      this.checkAll = checkedCount === this.timePeriod.length;\n      this.isIndeterminate = checkedCount > 0 && checkedCount < this.timePeriod.length;\n    },\n    handleCheckedTime(formData) {\n      let data = {\n        _openid: formData.openid,\n        nickName: formData.nickName,\n        realName: formData.realName,\n        leisure: ''\n      };\n      formData.days.forEach(value => {\n        value.checkedTimePeriod.forEach(val => {\n          data.leisure += value.day + ' ' + val + ',';\n        });\n      });\n      this.$axios.post('/partyLeisure/update', data).then(res => {\n        this.getReservationList();\n      });\n      this.dialogFormVisible = false;\n    },\n    getReservationList() {\n      this.tableData = [];\n      this.$axios.get('/partyLeisure/list').then(res => {\n        res.data.data.forEach(d => {\n          let data = {\n            openid: '',\n            nickName: '',\n            realName: '',\n            times: []\n          };\n          data.openid = d._openid;\n          data.nickName = d.nickName;\n          data.realName = d.realName;\n          d.leisure.split(\",\").forEach(val => {\n            data.times.push({\n              name: val,\n              type: this.changeType()\n            });\n          });\n          data.times.pop();\n          this.tableData.push(data);\n        });\n      });\n    },\n    changeType() {\n      const type = ['success', 'info', 'warning', 'danger'];\n      return type[Math.floor(Math.random() * 4)];\n    }\n  },\n  mounted() {\n    this.getReservationList();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;AAEAA;AACA;AACA;EACAC;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC,OACA;UACAC;UACAC;QACA,GACA;UACAD;UACAC;QACA,GACA;UACAD;UACAC;QACA;MAEA;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACAC;MACA;QACA;MACA;MACA;MACA;MACA;MACA;MACA;QACA;QACA;UACA;QACA;QACA;UACA;QACA;MACA;IACA;IACAC;MACA;QACA;MACA;MACA;QACA;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACA;QACAC;QACAhB;QACAC;QACAgB;MACA;MACAC;QACAC;UACAzB;QACA;MACA;MACA;QACA;MACA;MACA;IACA;IACA0B;MACA;MACA;QACAC;UACA;YACAtB;YACAC;YACAC;YACAqB;UACA;UACA5B;UACAA;UACAA;UACA6B;YACA7B;cAAAD;cAAA+B;YAAA;UACA;UACA9B;UACA;QACA;MACA;IACA;IACA+B;MACA;MACA;IACA;EACA;EACAC;IACA;EACA;AACA","names":["moment","name","data","tableData","search","dialogFormVisible","form","openid","nickName","realName","days","day","checkedTimePeriod","timePeriod","formLabelWidth","checkAll","isIndeterminate","methods","handleEdit","console","handleClose","handleCheckAllChange","handleCheckedTimePeriodChange","handleCheckedTime","_openid","leisure","formData","value","getReservationList","res","times","d","type","changeType","mounted"],"sourceRoot":"src/views/party","sources":["Reservation.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-table\r\n        :data=\"tableData.filter(data => !search || data.name.toLowerCase().includes(search.toLowerCase()))\"\r\n        style=\"width: 100%\">\r\n      <el-table-column\r\n          label=\"用户名\"\r\n          prop=\"nickName\">\r\n      </el-table-column>\r\n      <el-table-column\r\n          label=\"真实姓名\"\r\n          prop=\"realName\">\r\n      </el-table-column>\r\n      <el-table-column\r\n          label=\"可选预约时间\"\r\n          width=\"450px\"\r\n          prop=\"times\"\r\n      >\r\n        <template v-slot=\"scope\">\r\n          <el-tag\r\n              v-for=\"time in scope.row.times\"\r\n              :key=\"time.name\"\r\n              closable\r\n              :type=\"time.type\"\r\n              @close=\"handleClose(time,scope.$index)\">\r\n            {{ time.name }}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column\r\n          align=\"right\">\r\n        <template slot=\"header\" slot-scope=\"scope\">\r\n          <el-input\r\n              v-model=\"search\"\r\n              size=\"mini\"\r\n              placeholder=\"输入关键字搜索\"/>\r\n        </template>\r\n        <template slot-scope=\"scope\">\r\n          <el-button\r\n              size=\"mini\"\r\n              type=\"primary\"\r\n              plain\r\n              @click=\"handleEdit(scope.$index, scope.row)\">查看\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <el-dialog title=\"党员安排\" :visible.sync=\"dialogFormVisible\">\r\n      <el-form :model=\"form\">\r\n        <el-form-item label=\"党员用户名\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"form.nickName\" :disabled=\"true\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"党员真实姓名\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"form.realName\" :disabled=\"true\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item v-for=\"(d,index) in form.days\" :label=\"d.day\" :label-width=\"formLabelWidth\">\r\n          <el-checkbox :indeterminate=\"isIndeterminate\" @change=\"handleCheckAllChange(index)\">全选</el-checkbox>\r\n          <el-checkbox-group v-model=\"form.days[index].checkedTimePeriod\" @change=\"handleCheckedTimePeriodChange\">\r\n            <el-checkbox v-for=\"time in timePeriod\" :label=\"time\" :key=\"time\">{{ time }}</el-checkbox>\r\n          </el-checkbox-group>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleCheckedTime(form)\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport moment from 'moment';\r\n\r\nmoment.locale('zh-cn');\r\nconst timePeriodOptions = [\"7:30-9:30\", \"9:30-11:30\", \"11:30-12:30\", \"13:30-15:30\", \"15:30-17:30\", \"17:30-18:30\", \"19:30-21:30\"];\r\nexport default {\r\n  name: \"Reservation\",\r\n  data() {\r\n    return {\r\n      tableData: [],\r\n      search: '',\r\n      dialogFormVisible: false,\r\n      form: {\r\n        openid: '',\r\n        nickName: '',\r\n        realName: '',\r\n        days: [\r\n          {\r\n            day: moment(new Date()).format('YYYY/M/D(dddd)'),\r\n            checkedTimePeriod: []\r\n          },\r\n          {\r\n            day: moment(new Date()).add(1, \"days\").format('YYYY/M/D(dddd)'),\r\n            checkedTimePeriod: []\r\n          },\r\n          {\r\n            day: moment(new Date()).add(2, \"days\").format('YYYY/M/D(dddd)'),\r\n            checkedTimePeriod: []\r\n          }\r\n        ],\r\n      },\r\n      timePeriod: timePeriodOptions,\r\n      formLabelWidth: '120px',\r\n      checkAll: false,\r\n      isIndeterminate: true\r\n    }\r\n  },\r\n  methods: {\r\n    handleEdit(index, row) {\r\n      console.log(\"查看时openid\", row)\r\n      for (let i = 0; i < this.form.days.length; i++) {\r\n        this.form.days[i].checkedTimePeriod = [];\r\n      }\r\n      this.dialogFormVisible = true;\r\n      this.form.openid = row.openid;\r\n      this.form.nickName = row.nickName;\r\n      this.form.realName = row.realName;\r\n      for (let i = 0; i < row.times.length; i++) {\r\n        let day = row.times[i].name.split(' ')[0];\r\n        let timeIndex = this.form.days.findIndex((d) => {\r\n          return d.day === day;\r\n        });\r\n        if (timeIndex != -1) {\r\n          this.form.days[timeIndex].checkedTimePeriod.push(row.times[i].name.split(' ')[1]);\r\n        }\r\n      }\r\n    },\r\n    handleClose(time, index) {\r\n      let timeIndex = this.tableData[index].times.findIndex((e) => {\r\n        return e.name === time.name;\r\n      });\r\n      if (index != -1) {\r\n        this.tableData[index].times.splice(timeIndex, 1);\r\n      }\r\n    },\r\n    handleCheckAllChange(index) {\r\n      this.checkAll = !this.checkAll;\r\n      this.form.days[index].checkedTimePeriod = this.checkAll ? timePeriodOptions : [];\r\n      this.isIndeterminate = false;\r\n    },\r\n    handleCheckedTimePeriodChange(value) {\r\n      let checkedCount = value.length;\r\n      this.checkAll = checkedCount === this.timePeriod.length;\r\n      this.isIndeterminate = checkedCount > 0 && checkedCount < this.timePeriod.length;\r\n    },\r\n    handleCheckedTime(formData) {\r\n      let data = {\r\n        _openid: formData.openid,\r\n        nickName: formData.nickName,\r\n        realName: formData.realName,\r\n        leisure: ''\r\n      };\r\n      formData.days.forEach(value => {\r\n        value.checkedTimePeriod.forEach(val => {\r\n          data.leisure += (value.day + ' ' + val + ',');\r\n        })\r\n      })\r\n      this.$axios.post('/partyLeisure/update', data).then(res => {\r\n        this.getReservationList();\r\n      });\r\n      this.dialogFormVisible = false;\r\n    },\r\n    getReservationList() {\r\n      this.tableData = [];\r\n      this.$axios.get('/partyLeisure/list').then(res => {\r\n        res.data.data.forEach(d => {\r\n          let data = {\r\n            openid: '',\r\n            nickName: '',\r\n            realName: '',\r\n            times: []\r\n          };\r\n          data.openid = d._openid;\r\n          data.nickName = d.nickName;\r\n          data.realName = d.realName;\r\n          d.leisure.split(\",\").forEach(val => {\r\n            data.times.push({name: val, type: this.changeType()})\r\n          });\r\n          data.times.pop();\r\n          this.tableData.push(data);\r\n        });\r\n      })\r\n    },\r\n    changeType() {\r\n      const type = ['success', 'info', 'warning', 'danger'];\r\n      return type[Math.floor(Math.random() * 4)];\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getReservationList();\r\n  }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}